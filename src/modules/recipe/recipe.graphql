scalar DateTime

type Recipe {
    id: ID!
    name: String!
    description: String!
    ingredients: [Ingredient]
    steps: [Step]
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Ingredient {
    id: ID!
    name: String!
    count: Int!
    measure: String!
    recipeId: ID
}

type Step {
    id: ID!
    description: String!
    recipeId: ID
    title: String
    image: String
}

type Query {
    recipes: [Recipe]!
    recipe(id: ID!): Recipe
}

type Mutation {
    createRecipe(recipeData: RecipeInput): Recipe,
    updateRecipe(id: ID!, recipeData: RecipeInput): Recipe,
    deleteRecipe(id: ID!): Recipe
}

input RecipeInput {
    name: String!
    description: String!
    ingredients: [IngredientInput]
    steps: [StepInput]
}

input IngredientInput {
    name: String!
    count: Int!
    measure: String!
}

input StepInput {
    description: String!
    title: String
    image: String
}
